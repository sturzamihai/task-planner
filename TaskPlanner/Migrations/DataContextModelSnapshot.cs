// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskPlanner.Persistance;

#nullable disable

namespace TaskPlanner.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TaskPlanner.Departments.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TaskPlanner.Projects.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskPlanner.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AsigneeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AsigneeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskPlanner.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TaskPlanner.Users.Client", b =>
                {
                    b.HasBaseType("TaskPlanner.Users.User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("TaskPlanner.Users.Employee", b =>
                {
                    b.HasBaseType("TaskPlanner.Users.User");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("TaskPlanner.Users.Manager", b =>
                {
                    b.HasBaseType("TaskPlanner.Users.User");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("TaskPlanner.Departments.Department", b =>
                {
                    b.HasOne("TaskPlanner.Projects.Project", null)
                        .WithMany("Departments")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("TaskPlanner.Projects.Project", b =>
                {
                    b.HasOne("TaskPlanner.Users.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TaskPlanner.Task", b =>
                {
                    b.HasOne("TaskPlanner.Users.User", "Asignee")
                        .WithMany()
                        .HasForeignKey("AsigneeId");

                    b.HasOne("TaskPlanner.Projects.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Asignee");
                });

            modelBuilder.Entity("TaskPlanner.Users.User", b =>
                {
                    b.HasOne("TaskPlanner.Departments.Department", null)
                        .WithMany("Members")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("TaskPlanner.Departments.Department", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("TaskPlanner.Projects.Project", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
